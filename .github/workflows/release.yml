name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.1.8937393"
          echo "NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV

      - name: Install Android targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Setup Android keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > src-tauri/release.keystore

      - name: Build Android APK
        run: |
          cd src-tauri
          npm run tauri android build

      - name: Check APK files
        run: |
          echo "Checking for APK files..."
          find src-tauri/gen/android/app/build/outputs/apk -name "*.apk" -type f || echo "No APK files found"
          ls -la src-tauri/gen/android/app/build/outputs/apk/universal/release/ || echo "Release directory not found"

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ inputs.version }}
          path: src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk

      - name: Find APK file
        id: find_apk
        run: |
          APK_FILE=$(find src-tauri/gen/android/app/build/outputs/apk -name "*.apk" -type f | head -1)
          echo "apk_file=$APK_FILE" >> $GITHUB_OUTPUT
          echo "Found APK: $APK_FILE"

      - name: Create or update release with Android APK
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          name: 'Tjimi ${{ inputs.version }}'
          body: 'Release for Tjimi application - Android and Windows builds'
          draft: true
          prerelease: false
          files: ${{ steps.find_apk.outputs.apk_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Create or update release with Windows files
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ inputs.version }}
          releaseName: 'Tjimi ${{ inputs.version }}'
          releaseBody: 'Release for Tjimi application - Android and Windows builds'
          releaseDraft: true
          args: --target x86_64-pc-windows-msvc
